package Order;

import Customer.Customer;
import jakarta.persistence.*;
import java.time.LocalDate;
import java.util.List;

import Product.Product;

//Заказ
@Entity
@Table(name="Orders")
public class Order {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

//    @ManyToOne
//    @JoinColumn(name = "customer_id", nullable = false)
//    private Customer customer;

    @ManyToMany(cascade = CascadeType.ALL)
    @JoinTable(
            name = "order_product",
            joinColumns = @JoinColumn(name = "order_id"),
            inverseJoinColumns = @JoinColumn(name = "product_id"))
    private List<Product> products;

    @Enumerated(EnumType.STRING)

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "creation_date", nullable = false)
    private LocalDate creationDate;

    // Constructors, getters, and setters

    public Order() {
        this.creationDate = LocalDate.now(); // устанавливаем дату создания при создании заказа
    }

    public void setId(Long orderId) {
        this.id=orderId;
    }

}
///////////////////////
package Product;

import java.util.List;

import Order.Order;
import jakarta.persistence.*;
//Продукты
@Entity
@Table(name = "products")
public class Product {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;
    private Double price;

    @ManyToMany(mappedBy = "products")
    private List<Order> orders;
    public void setID(Long id){
        this.id=id;
    }
    public void setName(String name){
        this.name=name;
    }
    public void setPrice(Double price){
        this.price=price;
    }
    public Long getID(){
        return this.id;
    }
    public String getName(){
        return this.name;
    }
    public Double getPrice(){
        return this.price;
    }
}
////////////////////
package Customer;

import jakarta.persistence.*;

import java.util.List;

import Order.Order;

//класс Клиент

@Entity
@Table(name = "customers")
public class Customer {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @SuppressWarnings("unused")
    private String name;

    //тут реализовано множество заказов к одному клиенту
    @OneToMany(mappedBy = "customer", cascade = CascadeType.ALL)
    private List<Order> orders;
    public void setId(Long id){
        this.id=id;
    }

    public void setName(String name){
        this.name=name;
    }
}
